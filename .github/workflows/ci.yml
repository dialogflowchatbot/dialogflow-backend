name: Tests and release
# on: [push, pull_request]
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  # push:
  # pull_request:
  #   branches: [main]
  #   paths-ignore: ["samples/**", "**.md"]
  release:
    types: [published]
env:
  CRATE_NAME: dialogflow
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    # https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job#choosing-self-hosted-runners
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Platforms that don't work:
          #
          # - sparc64-unknown-linux-gnu - cannot compile openssl-sys
          # - x86_64-unknown-illumos - weird error compiling openssl - "bin/sh: 1: granlib: not found"

          # - os_name: FreeBSD-x86_64
          #   os: ubuntu-20.04
          #   target: x86_64-unknown-freebsd
          #   bin: dialogflow
          #   name: dialogflow-FreeBSD-x86_64.tar.gz
          #   skip_tests: true
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: dialogflow
            name: dialogflow-Linux-x86_64-musl.tar.gz
            skip_tests: true
          # - os_name: Linux-aarch64
          #   os: ubuntu-20.04
          #   target: aarch64-unknown-linux-musl
          #   bin: dialogflow
          #   name: dialogflow-Linux-aarch64-musl.tar.gz
          # - os_name: Linux-arm
          #   os: ubuntu-20.04
          #   target: arm-unknown-linux-musleabi
          #   bin: dialogflow
          #   name: dialogflow-Linux-arm-musl.tar.gz
          # Linux 32-bit
          # - os_name: Linux-i686
          #   os: ubuntu-20.04
          #   target: i686-unknown-linux-musl
          #   bin: dialogflow
          #   name: dialogflow-Linux-i686-musl.tar.gz
          #   skip_tests: true
          # - os_name: Linux-mips
          #   os: ubuntu-20.04
          #   target: mips-unknown-linux-musl
          #   bin: dialogflow
          #   name: dialogflow-Linux-mips.tar.gz
          # - os_name: Linux-mipsel
          #   os: ubuntu-20.04
          #   target: mipsel-unknown-linux-musl
          #   bin: dialogflow
          #   name: dialogflow-Linux-mipsel.tar.gz
          # - os_name: Linux-mips64
          #   os: ubuntu-20.04
          #   target: mips64-unknown-linux-muslabi64
          #   bin: dialogflow
          #   name: dialogflow-Linux-mips64.tar.gz
          #   skip_tests: true
          # - os_name: Linux-mips64el
          #   os: ubuntu-20.04
          #   target: mips64el-unknown-linux-muslabi64
          #   bin: dialogflow
          #   name: dialogflow-Linux-mips64el.tar.gz
          #   skip_tests: true
          # - os_name: Linux-powerpc
          #   os: ubuntu-20.04
          #   target: powerpc-unknown-linux-gnu
          #   bin: dialogflow
          #   name: dialogflow-Linux-powerpc-gnu.tar.gz
          #   skip_tests: true
          # - os_name: Linux-powerpc64
          #   os: ubuntu-20.04
          #   target: powerpc64-unknown-linux-gnu
          #   bin: dialogflow
          #   name: dialogflow-Linux-powerpc64-gnu.tar.gz
          #   skip_tests: true
          # - os_name: Linux-powerpc64le
          #   os: ubuntu-20.04
          #   target: powerpc64le-unknown-linux-gnu
          #   bin: dialogflow
          #   name: dialogflow-Linux-powerpc64le.tar.gz
          #   skip_tests: true
          # - os_name: Linux-riscv64
          #   os: ubuntu-20.04
          #   target: riscv64gc-unknown-linux-gnu
          #   bin: dialogflow
          #   name: dialogflow-Linux-riscv64gc-gnu.tar.gz
          # - os_name: Linux-s390x
          #   os: ubuntu-20.04
          #   target: s390x-unknown-linux-gnu
          #   bin: dialogflow
          #   name: dialogflow-Linux-s390x-gnu.tar.gz
          #   skip_tests: true
          # - os_name: NetBSD-x86_64
          #   os: ubuntu-20.04
          #   target: x86_64-unknown-netbsd
          #   bin: dialogflow
          #   name: dialogflow-NetBSD-x86_64.tar.gz
          #   skip_tests: true
          # - os_name: Windows-aarch64
          #   os: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   bin: dialogflow.exe
          #   name: dialogflow-Windows-aarch64.zip
          #   skip_tests: true
          # Windows 32-bit
          # - os_name: Windows-i686
          #   os: windows-latest
          #   target: i686-pc-windows-msvc
          #   bin: dialogflow.exe
          #   name: dialogflow-Windows-i686.zip
          #   skip_tests: true
          - os_name: Windows-x86_64
            os: windows-2019
            target: x86_64-pc-windows-msvc
            bin: dialogflow.exe
            name: dialogflow-Windows-x86_64.zip
            skip_tests: true
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: dialogflow
            name: dialogflow-Darwin-x86_64.tar.gz
            skip_tests: true
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: dialogflow
            name: dialogflow-Darwin-aarch64.tar.gz
            skip_tests: true
        toolchain:
          - stable
          # - beta
          # - nightly
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"
      - name: Configure Git
        run: |
          git config --global user.email "dialogflow@yeah.net"
          git config --global user.name "dialogflowchatbot"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Install build-essential on Linux
        run: sudo apt-get install --yes build-essential pkg-config libssl-dev
        if: contains(matrix.platform.name, 'musl')
      - name: Link g++
        run: sudo ln -s /bin/g++ /bin/musl-g++
        if: contains(matrix.platform.name, 'musl')
      - name: Install rust target
        run: rustup target add ${{ matrix.platform.target }} --toolchain ${{ matrix.toolchain }}
      - name: Build binary
        run: cargo build --release --verbose --target ${{ matrix.platform.target }}
        # uses: houseabsolute/actions-rust-cross@v0
        # with:
        #   command: "build"
        #   target: ${{ matrix.platform.target }}
        #   toolchain: ${{ matrix.toolchain }}
        #   # args: "--locked --release"
        #   args: "--release"
        #   strip: false
#      - name: Run tests
#        uses: houseabsolute/actions-rust-cross@v0
#        with:
#          command: "test"
#          target: ${{ matrix.platform.target }}
#          toolchain: ${{ matrix.toolchain }}
#          # args: "--locked --release"
#          args: "--release"
#        if: ${{ !matrix.platform.skip_tests }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          osstr="${{ matrix.platform.os }}"
          if [[ "${osstr:0:7}" == "windows" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
        if: matrix.toolchain == 'stable'
        # if: |
        #   matrix.toolchain == 'stable' &&
        #   ( startsWith( github.ref, 'refs/tags/v' ) ||
        #     github.ref == 'refs/tags/test-release' )
      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dialogflow-${{ matrix.platform.os_name }}
          path: "dialogflow-*"
        # if: matrix.toolchain == 'stable' && github.ref == 'refs/tags/test-release'
        if: matrix.toolchain == 'stable'
      # - name: Generate SHA-256
      #   run: shasum -a 256 ${{ matrix.platform.name }}
      #   if: |
      #     matrix.toolchain == 'stable' &&
      #     matrix.platform.os == 'macOS-latest' &&
      #     ( startsWith( github.ref, 'refs/tags/v' ) ||
      #       github.ref == 'refs/tags/test-release' )
      # - name: Publish GitHub release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     draft: true
      #     files: "dialogflow*"
      #     body_path: Changes.md
      #   if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )